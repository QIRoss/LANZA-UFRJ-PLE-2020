head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	2020.10.08.20.25.20;	author lucasqueiroz;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*
Universidade Federal do Rio de Janeiro
Escola Politecnica
Departamento de Eletronica e de Computacao
EEL270 - Computacao II - Turma 2020/4 - PLE-1
Prof. Marcelo Luiz Drumond Lanza
Autor: Lucas de Queiroz dos Reis
Descricao: aula0702.c

$Author$
$Date$
$Log$
*/

#include <stdio.h>
#include <stdlib.h>

#include "aula0701.h"


#define OK                              0
#define EOS                             '\0'
#define NUMERO_ARGUMENTOS               28



#define ARGUMENTO_INVALIDO              1
#define NUMERO_ARGUMENTOS_INVALIDO      2
#define ERRO_MULTIPLICANDO_MATRIZES     3

int main (int argc, char *argv[]){
    tipoErros check;
    char *validacao;
    unsigned auxiliar=1,indiceLinha=0, indiceColuna=0;
    float mLeft[DIMENSAO_LINHA_ESQ][DIMENSAO_COLUNA_ESQ], 
    mRight[DIMENSAO_LINHA_DIR][DIMENSAO_COLUNA_DIR], 
    mRes[DIMENSAO_LINHA_ESQ][DIMENSAO_COLUNA_DIR];

    if (argc != NUMERO_ARGUMENTOS){
        printf("Uso %s: 27 argumentos que sejam numeros reais, formando a[5][3] e b[3][4]\n",argv[0]);
        exit (NUMERO_ARGUMENTOS_INVALIDO);
    }

    for(indiceLinha = 0; indiceLinha < DIMENSAO_LINHA_ESQ; indiceLinha++){
        for(indiceColuna = 0; indiceColuna < DIMENSAO_COLUNA_ESQ; indiceColuna++){
            mLeft[indiceLinha][indiceColuna] = strtof(argv[auxiliar],&validacao);
            if(*validacao != EOS){
                printf("Caractere invalido, programa aceita somente numeros e \"- \"\n");
                exit(ARGUMENTO_INVALIDO);
            }
            auxiliar++;
        }
    }
    for(indiceLinha = 0; indiceLinha < DIMENSAO_LINHA_DIR; indiceLinha++){
        for(indiceColuna = 0; indiceColuna < DIMENSAO_COLUNA_DIR; indiceColuna++){
            mRight[indiceLinha][indiceColuna] = strtof(argv[auxiliar],&validacao);
            if(*validacao != EOS){
                printf("Caractere invalido, programa aceita somente numeros e \"- \"\n");
                exit(ARGUMENTO_INVALIDO);
            }
            auxiliar++;
        }
    }

    check = MultiplicarMatrizes(mLeft, mRight, mRes);
    if (check != 0){
        printf("Erro na multiplicacao das matrizes\n");
        exit(ERRO_MULTIPLICANDO_MATRIZES);
    }

    for(indiceLinha = 0; indiceLinha < DIMENSAO_LINHA_ESQ;indiceLinha++){
        for(indiceColuna = 0; indiceColuna < DIMENSAO_COLUNA_DIR; indiceColuna++){
            printf("|\t%.3f\t|",mRes[indiceLinha][indiceColuna]);
        }
        printf("\n");
    }
    
    return OK;
}

/* $RCSfile$ */@
